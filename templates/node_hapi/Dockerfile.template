# Multi-stage build for production optimization
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY src/ ./src/

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S fhirapp -u 1001

# Production stage
FROM node:18-alpine AS production

# Install security updates
RUN apk upgrade --no-cache

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/src ./src
COPY --from=builder /app/package*.json ./

# Copy additional files
COPY .env.example ./.env
COPY README.md ./

# Create logs directory
RUN mkdir -p logs && \
    chown -R 1001:1001 /app

# Switch to non-root user
USER 1001

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start application
CMD ["npm", "start"]

# Labels for better container management
LABEL maintainer="FHIR IQ <support@fhiriq.com>"
LABEL description="{{APP_DESCRIPTION}}"
LABEL version="1.0.0"
LABEL org.opencontainers.image.title="{{APP_NAME}}"
LABEL org.opencontainers.image.description="{{APP_DESCRIPTION}}"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.vendor="FHIR IQ"
LABEL org.opencontainers.image.source="https://github.com/fhiriq/{{APP_NAME}}"